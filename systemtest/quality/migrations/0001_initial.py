# Generated by Django 3.1.5 on 2021-05-01 22:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import systemtest.utils.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='QualityHistory',
            fields=[
                ('operation_number', systemtest.utils.models.CharFieldUpper(help_text='Number of operation comming from', max_length=5, verbose_name='Operation Number')),
                ('operation_status', systemtest.utils.models.CharFieldUpper(help_text='Operation status to know if system goes to consolidation', max_length=1, verbose_name='Operation Status')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creacion', verbose_name='Creacion')),
                ('comment', systemtest.utils.models.CharFieldUpper(blank=True, default=None, help_text='Comentario adicional en estado actual', max_length=30, null=True, verbose_name='Comentario')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique Identifier [ UUID ]', primary_key=True, serialize=False, unique=True, verbose_name='UID')),
            ],
            options={
                'verbose_name': 'history',
                'verbose_name_plural': 'history',
                'db_table': 'quality_history',
            },
        ),
        migrations.CreateModel(
            name='QualityStatus',
            fields=[
                ('id', models.SmallAutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', systemtest.utils.models.CharFieldUpper(help_text='List element', max_length=50, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'status',
                'verbose_name_plural': 'status',
                'db_table': 'quality_status',
            },
        ),
        migrations.CreateModel(
            name='QualitySystem',
            fields=[
                ('operation_number', systemtest.utils.models.CharFieldUpper(help_text='Number of operation comming from', max_length=5, verbose_name='Operation Number')),
                ('operation_status', systemtest.utils.models.CharFieldUpper(help_text='Operation status to know if system goes to consolidation', max_length=1, verbose_name='Operation Status')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creacion', verbose_name='Creacion')),
                ('comment', systemtest.utils.models.CharFieldUpper(blank=True, default=None, help_text='Comentario adicional en estado actual', max_length=30, null=True, verbose_name='Comentario')),
                ('system_number', systemtest.utils.models.CharFieldUpper(help_text='MFGN (7 chars)', max_length=7, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{7}$', message='Only 7 chars alpha-numeric')], verbose_name='Numero de sistema')),
                ('workunit', systemtest.utils.models.CharFieldUpper(help_text='WU (8 chars)', max_length=8, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{8}$', message='Only 8 chars alpha-numeric')], verbose_name='WorkUnit')),
                ('workunit_qty', models.PositiveIntegerField(blank=True, default=1, help_text='Cantidad de sistemas de la familia', null=True, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(50)], verbose_name='WorkUnit Quantity')),
                ('product_line', systemtest.utils.models.CharFieldUpper(help_text='Tipo de sistema', max_length=20, verbose_name='Product Line')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Fecha y hora de ultimo cambio de estado', verbose_name='Actualizacion')),
                ('quality_status', models.ForeignKey(blank=True, default=1, help_text='Estado del sistema', null=True, on_delete=django.db.models.deletion.PROTECT, to='quality.qualitystatus', verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'system',
                'verbose_name_plural': 'systems',
                'db_table': 'quality_system',
            },
        ),
    ]
