# Generated by Django 3.1.5 on 2021-01-15 23:16

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import systemtest.utils.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ncm_tag', models.PositiveIntegerField(blank=True, help_text='Numero de Tag en caso de tener', null=True, unique=True, validators=[django.core.validators.MaxValueValidator(99999999)], verbose_name='NCM')),
                ('part_number', systemtest.utils.models.CharFieldUpper(help_text="7 caracteres, rellenar con 0's", max_length=7, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{7}$')], verbose_name='Numero de parte [ PN ]')),
                ('serial_number', systemtest.utils.models.CharFieldUpper(blank=True, help_text='12 caracteres', max_length=12, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{12}$')], verbose_name='Numero de Seria [ SN ]')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de solicitud', verbose_name='Creacion')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Fecha y hora de ultimo cambio de estado', verbose_name='Actualizacion')),
                ('comment', systemtest.utils.models.CharFieldUpper(blank=True, help_text='Comentario adicional en estado actual', max_length=30, null=True, verbose_name='Comentario')),
            ],
            options={
                'verbose_name': 'request',
                'verbose_name_plural': 'requests',
                'db_table': 'pts_request',
            },
        ),
        migrations.CreateModel(
            name='RequestGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_description', systemtest.utils.models.CharFieldUpper(help_text='Nombre de la pieza/parte', max_length=15, verbose_name='Descripcion')),
                ('part_number', systemtest.utils.models.CharFieldUpper(help_text='Numero de parte(s) del requerimiento original', max_length=7, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{7}$')], verbose_name='Part Number [ PN ]')),
                ('is_vpd', models.BooleanField(default=False, help_text='Se entrega al cambio', verbose_name='VPD o TPM')),
                ('is_serialized', models.BooleanField(default=True, help_text='Numero de parte con serial', verbose_name='Serializado')),
                ('system_number', systemtest.utils.models.CharFieldUpper(help_text='7 caracteres', max_length=7, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{7}$')], verbose_name='Numero de sistema')),
                ('system_cell', systemtest.utils.models.CharFieldUpper(help_text='4 caracteres o mas', max_length=7, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{4}$')], verbose_name='Celda del sistema')),
                ('is_loaner', models.BooleanField(default=False, help_text="El sistema require que las piezas sean 'Loaner'", verbose_name='Loaner')),
                ('qty', models.SmallIntegerField(default=1, help_text='Cantidad de piezas del mismo PN', verbose_name='Cantidad')),
                ('request_bay', systemtest.utils.models.CharFieldUpper(help_text='4 caracteres', max_length=4, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{4}$')], verbose_name='Bahia TA')),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
                'db_table': 'pts_request_group',
            },
        ),
        migrations.CreateModel(
            name='RequestGroupStatus',
            fields=[
                ('id', models.SmallAutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', systemtest.utils.models.CharFieldUpper(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'group status',
                'verbose_name_plural': 'group status',
                'db_table': 'pts_request_group_status',
            },
        ),
        migrations.CreateModel(
            name='RequestGroupWorkspace',
            fields=[
                ('id', models.SmallAutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', systemtest.utils.models.CharFieldUpper(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'group workspace',
                'verbose_name_plural': 'group workspaces',
                'db_table': 'pts_request_group_workspace',
            },
        ),
        migrations.CreateModel(
            name='RequestNotNcmStatus',
            fields=[
                ('id', models.SmallAutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', systemtest.utils.models.CharFieldUpper(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'reason for no ncm',
                'verbose_name_plural': 'reason for no ncm',
                'db_table': 'pts_request_not_ncm',
            },
        ),
        migrations.CreateModel(
            name='RequestStatus',
            fields=[
                ('id', models.SmallAutoField(editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', systemtest.utils.models.CharFieldUpper(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'status',
                'verbose_name_plural': 'status',
                'db_table': 'pts_request_status',
            },
        ),
        migrations.CreateModel(
            name='RequestHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador unico [ UUID ]', primary_key=True, serialize=False, unique=True, verbose_name='Identificador')),
                ('part_number', systemtest.utils.models.CharFieldUpper(help_text='PN del requerimiento original', max_length=7, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{7}$')], verbose_name='Numero de parte [ PN ]')),
                ('serial_number', systemtest.utils.models.CharFieldUpper(blank=True, help_text='SN del requerimiento original', max_length=12, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]{12}$')], verbose_name='Numero de Seria [ SN ]')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora del cambio de estado del requerimineto original', verbose_name='Creacion')),
                ('comment', systemtest.utils.models.CharFieldUpper(blank=True, help_text='Comantario en estado del requerimineto', max_length=30, null=True, verbose_name='Comentario')),
                ('request', models.ForeignKey(help_text='Numero del requerimiento original, con el estado actual', on_delete=django.db.models.deletion.PROTECT, to='pts.request', verbose_name='Requerimiento')),
                ('request_status', models.ForeignKey(help_text='Estado del requerimiento orginal', on_delete=django.db.models.deletion.PROTECT, to='pts.requeststatus', verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'history',
                'verbose_name_plural': 'histories',
                'db_table': 'pts_request_track',
            },
        ),
    ]
